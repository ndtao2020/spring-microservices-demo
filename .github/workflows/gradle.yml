# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
#  pull_request:
#    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Check out code
      - name: Checkout the code
        uses: actions/checkout@v4
      # Specifying the JVM version and architecture
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle'
      # Setup gradle
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2.10.0
      # Building and testing code
      - name: Make gradlew executable
        run: chmod +x ./gradlew
      - name: Execute Gradle build
        run: ./gradlew clean build -Pprod --info --scan
      # Execute Benchmarks
      - name: Execute Benchmarks
        run: ./gradlew jmh
      # Packaging workflow data as artifacts
      - run: mkdir jmh && cp build/results/jmh/*.txt jmh
      - uses: actions/upload-artifact@v3
        with:
          name: Package
          path: jmh
