version: "3.9"

networks:
  microservice-network:
    driver: bridge

secrets:
  authentication-keystore:
    # keytool -genkeypair -alias mytestkey -keyalg RSA \
    #  -dname "CN=Web Server,OU=Unit,O=Organization,L=City,S=State,C=US" \
    #  -keypass changeme -keystore server.jks -storepass letmein
    file: ${DEPLOY_PATH}/secrets/keystore.jks

volumes:
  web_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${DEPLOY_PATH}/upload
  web_logs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${DEPLOY_PATH}/logs

services:
  vault:
    container_name: vault
    image: vault:latest
    restart: unless-stopped
    ports:
      - "${VAULT_PORT}:8200"
    command: vault server -config=/vault/config/vault.json
    cap_add:
      - IPC_LOCK
    networks:
      - microservice-network
    environment:
      VAULT_TOKEN: ${VAULT_TOKEN}
      VAULT_ADDR: http://0.0.0.0:8200
      VAULT_API_ADDR: http://0.0.0.0:8200
      VAULT_ADDRESS: http://0.0.0.0:8200
    volumes:
      - ${DEPLOY_PATH}/vault/config:/vault/config
      - ${DEPLOY_PATH}/vault/logs:/vault/logs
      - ${DEPLOY_PATH}/vault/policies:/vault/policies
      - ${DEPLOY_PATH}/vault/data:/vault/data
      - ${DEPLOY_PATH}/vault/plugins:/vault/plugins

  prometheus:
    container_name: prometheus
    image: prom/prometheus
    ports:
      - "9090:9090"
    networks:
      - microservice-network
    volumes:
      - ${DEPLOY_PATH}/prometheus/config.yml:/etc/prometheus/prometheus.yml
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9090" ]
      interval: 10s
      timeout: 10s
      retries: 10

  grafana:
    container_name: sbs_grafana
    image: grafana/grafana
    ports:
      - "3000:3000"
    networks:
      - microservice-network
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:3030" ]
      interval: 10s
      timeout: 10s
      retries: 10
